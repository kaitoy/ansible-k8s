kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
address: {{ k8s_node__kubelet_address }}
authentication:
  x509:
    clientCAFile: {{ k8s_node__pki_dir }}/ca.crt
  webhook:
    enabled: false
    cacheTTL: "0s"
  anonymous:
    enabled: false
authorization:
  mode: Webhook
  webhook:
    cacheAuthorizedTTL: 5m0s
    cacheUnauthorizedTTL: 30s
cgroupDriver: {{ k8s_node__kubelet_cgroup_driver }}
clusterDNS: [{{ k8s__dns_server_ip_addr }}]
clusterDomain: {{ k8s__dns_cluster_domain }}
containerLogMaxFiles: {{ k8s_node__kubelet_container_log_max_files }}
containerLogMaxSize: {{ k8s_node__kubelet_container_log_max_size }}
containerRuntimeEndpoint: unix://{{ k8s_node__containerd_state_dir }}/containerd.sock
enableDebugFlagsHandler: {{ k8s_node__kubelet_enable_debug_flags_handler }}
enableProfilingHandler: {{ k8s_node__kubelet_enable_profiling_handler }}
enforceNodeAllocatable:
{% for _enforce in k8s_node__kubelet_enforce_node_allocatable %}
- {{ _enforce }}
{% endfor %}
evictionHard:
{%- for _rule_name, _rule_val in k8s_node__kubelet_eviction_hard.items() %}

  {{ _rule_name }}: {{ _rule_val }}

{%- endfor %}

{% if k8s_node__kubelet_eviction_soft is defined %}
evictionSoft:
    {%- for _rule_name, _rule_val in k8s_node__kubelet_eviction_soft.items() %}

  {{ _rule_name }}: {{ _rule_val }}

    {%- endfor %}
{% endif %}

{% if k8s_node__kubelet_eviction_soft_grace_period is defined %}
evictionSoftGracePeriod:
    {%- for _rule_name, _rule_val in k8s_node__kubelet_eviction_soft_grace_period.items() %}

  {{ _rule_name }}: {{ _rule_val }}

    {%- endfor %}
{% endif %}

evictionPressureTransitionPeriod: {{ k8s_node__kubelet_eviction_pressure_transition_period }}
evictionMaxPodGracePeriod: {{ k8s_node__kubelet_eviction_max_pod_grace_period }}
{% if k8s_node__kubelet_eviction_minimum_reclaim is defined %}
evictionMinimumReclaim map[string]string:
    {%- for _rule_name, _rule_val in k8s_node__kubelet_eviction_minimum_reclaim.items() %}

  {{ _rule_name }}: {{ _rule_val }}

    {%- endfor %}
{% endif %}

failSwapOn: {{ k8s_node__kubelet_fail_swap_on }}
{% if k8s__feature_gates is defined %}
featureGates:
    {%- for _fg_name, _fg_flag in k8s__feature_gates.items() %}

  {{ _fg_name }}: {{ _fg_flag }}

    {%- endfor %}
{% endif %}

hairpinMode: {{ k8s_node__kubelet_hairpin_mode }}
healthzBindAddress: {{ k8s_node__kubelet_healthz_bind_address }}
healthzPort: {{ k8s_node__kubelet_healthz_port }}
imageMinimumGCAge: {{ k8s_node__kubelet_image_minimum_gc_age }}
imageGCHighThresholdPercent: {{ k8s_node__kubelet_image_gc_high_threshold_percent }}
imageGCLowThresholdPercent: {{ k8s_node__kubelet_image_gc_low_threshold_percent }}
maxOpenFiles: {{ k8s_node__kubelet_max_open_files }}
maxPods: {{ k8s_node__kubelet_max_pods }}
nodeStatusUpdateFrequency: {{ k8s_node__kubelet_node_status_update_frequency }}
podPidsLimit: {{ k8s_node__kubelet_pod_pids_limit }}
port: {{ k8s_node__kubelet_port }}
readOnlyPort: 0
rotateCertificates: {{ k8s_node__kubelet_rotate_certificates }}
runtimeRequestTimeout: {{ k8s_node__kubelet_runtime_request_timeout }}
serverTLSBootstrap: {{ k8s_node__kubelet_server_tls_bootstrap }}
shutdownGracePeriod: {{ k8s_node__kubelet_shutdown_grace_period }}
shutdownGracePeriodCriticalPods: {{ k8s_node__kubelet_shutdown_grace_period_critical_pods }}
{% if k8s__static_pod.enabled %}
staticPodPath: {{ k8s__static_pod.manifests_path }}
{% endif %}
tlsCertFile: {{ k8s_node__pki_dir }}/kubelet.crt
tlsCipherSuites:
{% set _ciphers = k8s_node__kubelet_tls_cipher_suites.split(',') %}
{% for _cipher in _ciphers %}
- {{ _cipher }}
{% endfor %}
tlsMinVersion: {{ k8s_node__kubelet_tls_min_version }}
tlsPrivateKeyFile: {{ k8s_node__pki_dir }}/kubelet.key
volumePluginDir: {{ k8s__volume_plugin_dir }}
