- name: libseccomp is installed
  block:
  - name: libseccomp is installed by yum
    yum:
      name: libseccomp
      state: latest
      disablerepo: '{{ k8s_node__rpm_repos_to_disable | join(",") }}'
    when: not host__use_dnf
  - name: libseccomp is installed by dnf
    dnf:
      name: libseccomp
      state: latest
      disablerepo: '{{ k8s_node__rpm_repos_to_disable | join(",") }}'
    when: host__use_dnf
  when: k8s_node__yum_install_dependencies

- name: runC
  block:
  - name: runC bin dir exists
    file:
      path: '{{ k8s_node__runc_bin_dir }}'
      owner: root
      group: root
      mode: 0755
      state: directory
  - name: runC is installed
    get_url:
      url: '{{ k8s_node__runc_download_url }}'
      dest: '{{ k8s_node__runc_bin_dir }}/runc'
      owner: root
      group: root
      mode: 0755
      checksum: '{{ k8s_node__runc_checksum }}'

- name: containerd
  vars:
    _containerd_archive: containerd-{{ k8s_node__containerd_version }}.linux-amd64.tar.gz
  block:
  - name: containerd bin dir exists
    file:
      path: '{{ k8s_node__containerd_bin_dir }}'
      owner: root
      group: root
      mode: 0755
      state: directory
  - name: containerd archive is downloaded
    get_url:
      url: '{{ k8s_node__containerd_archive_download_url_base }}'
      dest: '{{ k8s__remote_tmp_dir }}/{{ _containerd_archive }}'
      checksum: '{{ k8s_node__containerd_archive_checksum }}'
    register: _get_url_result
  - name: containerd bins are installed
    unarchive:
      src: '{{ k8s__remote_tmp_dir }}/{{ _containerd_archive }}'
      remote_src: true
      dest: '{{ k8s_node__containerd_bin_dir }}'
      owner: root
      group: root
      mode: 0755
      extra_opts:
      - --strip-components=1
    when: _get_url_result.changed
  - name: containerd conf dir exists
    file:
      path: '{{ k8s_node__containerd_conf | dirname }}'
      owner: root
      group: root
      mode: 0755
      state: directory
  - name: containerd conf exists
    template:
      src: containerd.config.toml.j2
      dest: '{{ k8s_node__containerd_conf }}'
      owner: root
      group: root
      mode: 0644
  - include_tasks: containerd_registry_hosts_files.generated.yml
    loop: '{{ k8s_node__containerd_registry_hosts | list }}'
    loop_control:
      loop_var: _containerd_registry_host
  - name: containerd unit file exists
    template:
      src: systemd_units/containerd.service.j2
      dest: /etc/systemd/system/{{ k8s__service_name_prefix }}containerd.service
      owner: root
      group: root
      mode: 0664
  - name: containerd is running
    systemd:
      name: '{{ k8s__service_name_prefix }}containerd'
      daemon_reload: true
      enabled: true
      state: started
