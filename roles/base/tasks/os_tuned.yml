- name: host__public_address is set
  set_fact:
    host__public_address: '{{ ansible_facts.default_ipv4.address }}'
  when: host__public_address is undefined

- name: Check if dnf command is available
  command: /usr/bin/which dnf
  register: _check_dnf
  ignore_errors: true
- name: host__use_dnf is set
  set_fact:
    host__use_dnf: '{{ _check_dnf is not failed }}'
  when: host__use_dnf is undefined

- name: /etc/hosts has entries needed
  lineinfile:
    path: /etc/hosts
    line: '{{ item }}'
    state: present
  loop: '{{ base__hosts_entries }}'

- name: RPM repositories needed are enabled
  yum_repository:
    name: '{{ item.name }}'
    description: '{{ item.description }}'
    baseurl: '{{ item.baseurl }}'
    gpgkey: '{{ item.gpgkey }}'
    gpgcheck: '{{ item.gpgcheck }}'
    enabled: true
  loop: '{{ base__rpm_repos_to_enable }}'

- name: ntp is setup
  block:
  - name: chrony is installed
    yum:
      name: chrony
      state: latest
      disablerepo: '{{ base__rpm_repos_to_disable | join(",") }}'
    when: not host__use_dnf
  - name: chrony is installed
    dnf:
      name: chrony
      state: latest
      disablerepo: '{{ base__rpm_repos_to_disable | join(",") }}'
    when: host__use_dnf
  - name: chrony is configured
    template:
      src: chrony/chrony.conf.j2
      dest: /etc/chrony.conf
  - name: chronyd is running and enabled
    service:
      name: chronyd
      state: started
      enabled: true
  when: base__ntp_servers

- name: SELinux
  block:
  - name: SELinux is configured
    selinux:
      policy: '{{ base__selinux.policy }}'
      state: '{{ base__selinux.state }}'
  - name: SELinux is disabled
    command: /usr/sbin/setenforce 0
  when: base__selinux

- name: firewalld is disabled
  systemd:
    name: firewalld
    state: stopped
    enabled: false
  when: base__disable_firewalld

- name: Remote tmp dir exists
  file:
    path: '{{ k8s__remote_tmp_dir }}'
    state: directory

- name: RPM packages are installed
  yum:
    name: '{{ item }}'
    state: latest
    disablerepo: '{{ base__rpm_repos_to_disable | join(",") }}'
  loop: '{{ base__rpm_pkgs_to_install }}'
  when: not host__use_dnf
- name: RPM packages for dev tools are installed
  dnf:
    name: '{{ item }}'
    state: latest
    disablerepo: '{{ base__rpm_repos_to_disable | join(",") }}'
  loop: '{{ base__rpm_pkgs_to_install }}'
  when: host__use_dnf
